{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "ghostty",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "\\r?\\n"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          },
          {
            "type": "SYMBOL",
            "name": "directive"
          }
        ]
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "STRING",
              "value": "#"
            }
          },
          {
            "type": "ALIAS",
            "content": {
              "type": "PATTERN",
              "value": "[^\\r\\n]*"
            },
            "named": true,
            "value": "text"
          },
          {
            "type": "PATTERN",
            "value": "\\r?\\n"
          }
        ]
      }
    },
    "directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "config_name"
          }
        },
        {
          "type": "SYMBOL",
          "name": "equal_sign"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "value",
              "content": {
                "type": "SYMBOL",
                "name": "config_value"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "\\r?\\n"
        }
      ]
    },
    "equal_sign": {
      "type": "PATTERN",
      "value": "[ \\t]*=[ \\t]*"
    },
    "config_name": {
      "type": "PATTERN",
      "value": "[a-z]+(-[a-z]+)*"
    },
    "config_value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "boolean_literal"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "adjustment"
        },
        {
          "type": "SYMBOL",
          "name": "raw_value"
        }
      ]
    },
    "boolean_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "number_literal": {
      "type": "PATTERN",
      "value": "[0-9]+(\\.[0-9]+)?"
    },
    "adjustment": {
      "type": "PREC_DYNAMIC",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "percent_adjustment"
          },
          {
            "type": "SYMBOL",
            "name": "numeric_adjustment"
          }
        ]
      }
    },
    "percent_adjustment": {
      "type": "PATTERN",
      "value": "[+-]?[0-9]+%"
    },
    "numeric_adjustment": {
      "type": "PATTERN",
      "value": "[+-]+[0-9]+"
    },
    "string_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "PATTERN",
              "value": "[^\"]*"
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "PATTERN",
              "value": "[^']*"
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        }
      ]
    },
    "raw_value": {
      "type": "PREC_DYNAMIC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "[^\\r\\n]+"
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
